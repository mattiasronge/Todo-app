{"remainingRequest":"/Users/mattiasronge/todoapp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mattiasronge/todoapp/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mattiasronge/todoapp/src/components/HelloWorld.vue","mtime":1550844161391},{"path":"/Users/mattiasronge/todoapp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mattiasronge/todoapp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState, mapMutations, mapActions } from 'vuex';\n\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      newTodo: '',\n      \n    }\n  },\n\n  computed: {    \n    ...mapState([\n      'title', 'todos',\n    ]),\n  },\n\n\n  methods: {\n      ...mapMutations([\n        'ADD_TODO', 'DONE_TODO'\n      ]),\n      ...mapActions([\n        'removeTodo'\n      ]),\n      addTodo: function() {\n        this.ADD_TODO(this.newTodo);\n        this.newTodo = ''\n      },\n      removeTodos: function(todo) {\n        this.removeTodo(todo);\n      },\n  }\n}\n",{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"todo\">\n    <div class=\"container\">\n      <h1>{{ title }}</h1>\n      <form @submit.prevent=\"addTodo\">\n        <input class=\"todo-input\" type=\"text\" placeholder=\"Add here\" v-model=\"newTodo\" />\n      </form>\n\n      <ul>\n        <li v-for=\"(todo, index) in todos\" v-bind:key=\"index\">\n          {{ todo.title }}\n          <button v-on:click=\"removeTodos(index)\" class=\"remove\">X</button>\n\n<div>\n  <input type=\"checkbox\" name=\"my-checkbox\" id=\"opt-in\">\n  <label for=\"opt-in\">This one is done</label>\n</div>\n\n          \n        \n\n      </li>\n      </ul>\n    </div>\n    </div>\n\n</template>\n\n<script>\nimport { mapState, mapMutations, mapActions } from 'vuex';\n\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      newTodo: '',\n      \n    }\n  },\n\n  computed: {    \n    ...mapState([\n      'title', 'todos',\n    ]),\n  },\n\n\n  methods: {\n      ...mapMutations([\n        'ADD_TODO', 'DONE_TODO'\n      ]),\n      ...mapActions([\n        'removeTodo'\n      ]),\n      addTodo: function() {\n        this.ADD_TODO(this.newTodo);\n        this.newTodo = ''\n      },\n      removeTodos: function(todo) {\n        this.removeTodo(todo);\n      },\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\nhtml, #app, .home {\n    height: 100%;\n  }\n  body {\n    background-color: rgb(133, 133, 133);\n    margin: 0;\n    height: 100%;\n  }\n\n  .todo {\n    display: grid;\n    grid-template-columns: repeat(2, 50%);\n    grid-template-rows: 100%;\n    height: 100%;\n  }\n\n  .container {\n    padding: 50px;\n  }\n\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  ul li {\n    padding: 20px;\n    background: white;\n  }\n  input {\n    padding: 20px;\n \n    margin-bottom: 40px;\n    outline: none;\n  }\n  .remove {\n        float: right;\n        color: #ff0076;\n        background: #bebebe;  \n        cursor:pointer;\n  }\n  .flex-item {\n  margin: 5px;\n}\n\n/* Labels for checked inputs */\ninput:checked + label {\n  color: rgb(0, 185, 15);\n}\n\n/* Radio element, when checked */\ninput[type=\"radio\"]:checked {\n  box-shadow: 0 0 0 3px orange;\n}\n\n/* Option elements, when selected */\noption:checked {\n  box-shadow: 0 0 0 3px lime;\n  color: red;\n}\n\n</style>\n"]}]}